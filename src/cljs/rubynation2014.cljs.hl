(page "rubynation2014.html"
  (:require [hoplon.reveal :refer [slideshow chapter slide notes highlight quicklist bullet]]
            [tailrecursion.hoplon.reload :as r]
            [hoplon.samples :as a]
            [hoplon.util :as u]
            [hoplon.spreadsheet :as s]
            [hoplon.datamodel :as d]))

(r/reload-all)

(defn chapter-intro []
  (chapter :title ""
           (slide :title (h2 "It's Java, But Wait, It's Ruby")
                  (br)
                  (br)
                  (bullet (h3 :class "yellow" "Yoko Harada"))
                  (bullet (h3 :class "yellow" "@yokolet")))

           (slide :title (h2 "Who Is Yoko?")
                  (br)
                  (ul
                   (li :class "fragment" :data-fragment-index "1"
                       (h3 :class "yellow" "Developer at Cognitect, Inc.")
                       (bullet (h3 (a :target "_blank" :href "http://cognitect.com/" "http://cognitect.com/")))
                       (h4 "Ruby, Rails/Java/JavaScript/Clojure/ClojureScript/Groovy"))
                   (li :class "fragment" :data-fragment-index "2"
                       (h3 :class "yellow" "JRuby Developer"))
                   (li :class "fragment" :data-fragment-index "3"
                       (h3 :class "yellow" "Nokogiri Gem Developer"))
                   (li :class "fragment" :data-fragment-index "4"
                       (h3 :class "yellow" "Diametric Gem Developer"))
                   (li :class "fragment" :data-fragment-index "5"
                       (h3 :class "yellow" "@yokolet")))
)

           (slide :title (h2 "Once Upon a Time")
                  (br)
                  (bullet :class "fragment" :data-fragment-index "1"
                          (h3 :class "yellow" "There were days Java EMPIRE thrived"))
                  (br)
                  (bullet :class "fragment" :data-fragment-index "1"
                          (img :src "RubyNation2014/img/dark-age.png")) )

           (slide :title (h2 "Time Goes By, Then")
                  (br)
                  (bullet :class "fragment" :data-fragment-index "1"
                          (h3 :class "yellow" "There were days Java EMPIRE shrinked"))
                  (bullet :class "fragment" :data-fragment-index "1"
                          (img :src "RubyNation2014/img/rip.png")) )

           (slide :title (h2 "On the Other Side of the World")
                  (br)
                  (bullet :class "fragment" :data-fragment-index "1"
                          (h3 :class "yellow" "Days of Ruby, Ruby on Rails keep going"))
                  (bullet :class "fragment" :data-fragment-index "1"
                          (img :src "RubyNation2014/img/peaceful.png")))

           (slide :title (h2 "Time Goes By, Then")
                  (br)
                  (bullet :class "fragment" :data-fragment-index "1"
                          (h3 :class "yellow" "New technologies have grown quickly!"))
                  (bullet :class "fragment" :data-fragment-index "1"
                          (img :src "RubyNation2014/img/bigdata.png"))
                  )
           (slide :title (h2 "Java EMPIRE strikes back...?")
                  (br)
                  (bullet :class "fragment" :data-fragment-index "1"
                          (h3 :class "yellow" "Is It The Time Or Not?"))
                  (bullet :class "fragment" :data-fragment-index "1"
                          (img :src "RubyNation2014/img/striking_back.png"))
                  )
           (slide :title (h2 "The Answer Is ...")
                  (br)
                  (bullet :class "fragment" :data-fragment-index "1"
                          (h3 :class "yellow" "No need to switch to other languages"))
                  (bullet :class "fragment" :data-fragment-index "1"
                          (img :src "RubyNation2014/img/nooo.png"))
                  )
           (slide :title (h2 "It is 2014, So ...")
                  (br)
                  (bullet :class "fragment" :data-fragment-index "1"
                          (h3 :class "yellow" "Let Java Go"))
                  (bullet :class "fragment" :data-fragment-index "1"
                          (img :src "RubyNation2014/img/let_java_go.png")) )
           (slide :title (h2 "Remember That?")
                  (bullet :class "fragment" :data-fragment-index "1"
                          (h3 :class "yellow" "We have JRuby "))
                  (bullet :class "fragment" :data-fragment-index "2"
                          (h3 :class "yellow" "JRuby is an open door"))
                  (bullet :class "fragment" :data-fragment-index "2"
                          (img :src "RubyNation2014/img/jruby_open_door.png")) )
           ))

(defn chapter-mapleroad []
  (chapter :title  "How JRuby Works?"
           (slide :title (h2 "Example 1: mapleroad gem")
                  (bullet (h3 :class "yellow" "Provides wrappers for Hadoop's map/reduce jobs"))
                  (bullet (h3 (a :target "_blank" :href "https://github.com/yokolet/mapleroad" "https://github.com/yokolet/mapleroad")))
                  (bullet :class "fragment" :data-fragment-index "1"
                          (h3 :class "yellow" "version 0.0.1.pre"))

                  )
           (slide :title (h2 "Example 1: mapleroad gem")
                  (br)
                  (bullet (h3 :class "yellow" "How it works"))
                  (bullet (img :src "RubyNation2014/img/mapleroad.png")) )

           
           (slide :title (h2 "Example 1: mapleroad gem")
                  (bullet (h3 :class "yellow" "Mapper Wrapper by Java"))
                  (h4 (highlight :class "java"
                                 ;;{{
public void map(LongWritable key, Text value,
                OutputCollector<Text, IntWritable> outputCollector, Reporter arg3)
    throws IOException {
    Ruby runtime = Ruby.getGlobalRuntime();
    RubyRuntimeAdapter adapter = JavaEmbedUtils.newRuntimeAdapter();
    IRubyObject receiver = adapter.eval(runtime, mapper_code);

    IRubyObject rubyKey = JavaUtil.convertJavaToRuby(runtime, key);
    IRubyObject rubyValue = JavaUtil.convertJavaToRuby(runtime, value);
    MapleRoadCollectorTextInt collector =
        new MapleRoadCollectorTextInt(keyText, valueInt, outputCollector);
    IRubyObject rubyCollector = JavaUtil.convertJavaToRuby(runtime, collector);
                        
    Helpers.invoke(runtime.getCurrentContext(), receiver,
                   "map", rubyKey, rubyValue, rubyCollector);
}
                                 ;;}}
                                 ))
                  )
           (slide :title (h2 "Example 1: mapleroad gem")
                  (bullet (h3 :class "yellow" "Mapper by Ruby"))
                  (h3 (highlight :class "ruby"
                                 ;;{{
                                 class WordCounterMapper
                                   def map (key, value, collector)
                                     value.to_s.split.each do |word|
                                       collector.collect (word, 1)
                                     end
                                   end
                                 end
                                 WordCounterMapper.new
                                 ;;}}
                                 )))

           (slide :title (h2 "Example 1: mapleroad gem")
                  (bullet (h3 :class "yellow" "Reducer by Ruby"))
                  (h3 (highlight :class "ruby"
                                 ;;{{
                                 class WordCounterReducer
                                   def reduce(key, values, collector)
                                     sum = values.inject(0) do |memo, v|
                                       memo = memo + v.to_string.to_i
                                     end
                                     collector.collect(key, sum)
                                   end
                                 end
                                 WordCounterReducer.new
                                 ;;}}
                                 )))

           (slide :title (h2 "Example 1: mapleroad gem")
                  (br)
                  (br)
                  (bullet (h3 :class "yellow" "It's DEMO time!"))
                  )
           
           (slide :title (h2 "Example 1: mapleroad gem")
                  (br)
                  (bullet (h3 :class "yellow" "By the way, what is this, to_string?"))
                  (h3 (highlight :class "ruby"
                                 ;;{{
                                 memo = memo + v.to_string.to_i
                                 ;;}}
                                 ))
                  (br)
                  (bullet :class "fragment" :data-fragment-index "1"
                          (h3 :class "yellow" "Java's toString() method"))
                  (bullet :class "fragment" :data-fragment-index "2"
                          (h3 :class "yellow" "JRuby does the best effort for conversion"))
                  )
           )
  )

(defn chapter-nokogiri []
  (chapter :title "Java Extension for JRuby"
           (slide :title (h2 "What is Java Exetnsion?")
                  (br)
                  (bullet :class "fragment" :data-fragment-index "1"
                          (h3 :class "yellow" "C Extension for CRuby"))
                  (bullet :class "fragment" :data-fragment-index "2"
                          (h3 :class "yellow" "Java Extension for JRuby"))
                  (bullet :class "fragment" :data-fragment-index "3"
                          (h3 :class "yellow" "Those extend Ruby using native library"))
                  ) ;; slide

           (slide :title (h2 "Example 2: Nokogiri Gem")
                  (br)
                  (bullet (h3 :class "yellow" "XML/HTML processing library for Ruby"))
                  (bullet (h3 (a :target "_blank" :href "http://nokogiri.org/" "http://nokogiri.org/")))
                  (bullet (h4 (a :target "_blank" :href "https://github.com/sparklemotion/nokogiri" "https://github.com/sparklemotion/nokogiri")))
                  ) ;; slide
           
           (slide :title (h2 "Example 2: Nokogiri Gem")
                  (br)
                  (bullet :class "fragment" :data-fragment-index "1"
                          (h3 :class "yellow" "Extends CRuby using libxml"))
                  (bullet :class "fragment" :data-fragment-index "2"
                          (h3 :class "yellow" "Extends JRuby using Xerces"))
                  (bullet :class "fragment" :data-fragment-index "3"
                          (h3 :class "yellow" "Both extend Ruby using native library"))
                  ) ;; slide

           (slide :title (h2 "Example 2: Nokogiri Gem")
                  (bullet (h3 :class "yellow" "How does Nokogiri extend natvie library?"))
                  (bullet (img :src "RubyNation2014/img/nokogiri.png"))
                  ) ;; slide

           (slide :title (h2 "Example 2: Nokogiri Gem")
                  (bullet (h3 :class "yellow" "From DOM tree to Nokogiri object"))
                  (bullet (img :src "RubyNation2014/img/nokogiri-wrapper.png"))
                  ) ;; slide

           (slide :title (h2 "Example 2: Nokogiri Gem")
                  (bullet :class "fragment" :data-fragment-index "1"
                          (h3 :class "yellow" "Do you need to type Java method? like to_string?"))
                  (bullet :class "fragment" :data-fragment-index "2"
                          (h3 "No"))
                  (bullet :class "fragment" :data-fragment-index "3"
                          (h3 :class "yellow" "Can you use Nokogiri like Ruby only API?"))
                  (bullet :class "fragment" :data-fragment-index "4"
                          (h3 "Yes"))
                  ) ;; slide
           ) ;; chapter
  ) ;; defn

(defn chapter-diametric []
  (chapter :title "How Java Extension Wraps Java Object"
           (slide :title (h2 "Example 3: Diametric Gem")
                  (br)
                  (bullet (h3 :class "yellow" "ActiveRecord Style Datomic Wrapper"))
                  (bullet (h3 (a :target "_blank" :href "http://github.com/relevance/diametric" "http://github.com/relevance/diametric")))
                  (bullet (h3 (a :target "_blank" :href "http://www.datomic.com/" "http://www.datomic.com/")))

                  ) ;; slide

           (slide :title (h2 "Example 3: Diametric Gem")
                  (bullet (h3 :class "yellow" "Diametric converts class definition to ..."))
                  (bullet (img :src "RubyNation2014/img/person_simple_model.png"))
                  )  ;; slide

           (slide :title (h2 "Example 3: Diametric Gem")
                  (bullet (h3 :class "yellow" "Datomic schema in EDN"))
                  (bullet (img :src "RubyNation2014/img/person_simple_schema.png"))
                  ) ;; slide

           (slide :title (h2 "Example 3: Diametric Gem")
                  (bullet (h3 :class "yellow" "Diametric converts method calls to ..."))
                  (bullet (img :src "RubyNation2014/img/person_simple_instance.png"))
                  )  ;; slide

           (slide :title (h2 "Example 3: Diametric Gem")
                  (bullet (h3 :class "yellow" "Datomic transaction data in EDN"))
                  (bullet (img :src "RubyNation2014/img/person_simple_txdata.png"))
                  ) ;; slide

           (slide :title (h2 "Example 3: Diametric Gem")
                  (bullet (h3 :class "yellow" "Diametric converts method calls to ..."))
                  (bullet (img :src "RubyNation2014/img/diametric_query_all.png"))
                  ) ;; slide

           (slide :title (h2 "Example 3: Diametric Gem")
                  (bullet (h3 :class "yellow" "Datomic query in Datalog"))
                  (bullet (img :src "RubyNation2014/img/datalog_query.png"))
                  ) ;; slide

           (slide :title (h2 "Example 3: Diametric Gem")
                  (bullet (h3 :class "yellow" "Architecture for Peer API"))
                  (bullet (img :src "RubyNation2014/img/diametric_peer_api_small.png"))
                  )

           (slide :title (h2 "Example 3: Diametric Gem")
                  (bullet (h3 :class "yellow" "Datomic's query results"))
                  (bullet (img :src "RubyNation2014/img/datomic-query.png"))
                  )

           (slide :title (h2 "Example 3: Diametric Gem")
                  (bullet (h4 :class "yellow" "HashSet of PersistentVector is bad for Ruby"))
                  (bullet :class "fragment" :data-fragment-index "1"
                          (h3 :class "yellow" "It should quack like Ruby object"))
                  (bullet :class "fragment" :data-fragment-index "2"
                          (h4 :class "yellow" "Creates Ruby Set and Array from result is a bad idea"))
                  (bullet :class "fragment" :data-fragment-index "3"
                          (h3 :class "yellow" "Doesn't know how many are there"))
                  (bullet :class "fragment" :data-fragment-index "4"
                          (h3 :class "yellow" "It should retain laziness!"))
                  )

           (slide :title (h2 "Example 3: Diametric Gem")
                  (bullet (h3 :class "yellow" "Diametric wraps HashSet and PersistentVector"))
                  (bullet (img :src "RubyNation2014/img/diametric-type-wrapper.png"))
                  )

           (slide :title (h2 "Example 3: Diametric Gem")
                  (bullet (h3 :class "yellow" "It's Java, but it's Ruby method"))
                  (bullet (img :src "RubyNation2014/img/wrapping_code.png"))
                  )

           (slide :title (h2 "Example 3: Diametric Gem")
                  (br)
                  (br)
                  (bullet (h3 :class "yellow" "It's DEMO time!"))
                  )

           ) ;; chapter
  ) ;; defn

(defn chapter-poplar []
  (chapter :title "How to Write Java Extension?"
           (slide :title (h2 "Example 4: Poplar repository")
                  (br)
                  (bullet (h3 :class "yellow" "Very simple Java extenstion"))
                  (bullet (h3 :class "yellow" "Apache Commons Math for Ruby"))
                  (bullet (h3 (a :target "_blank" :href "http://github.com/yokolet/Poplar" "http://github.com/yokolet/Poplar")))
                  (bullet (h4 (a :target "_blank" :href "http://yokolet.blogspot.com/2011/05/extending-jruby.html" "http://yokolet.blogspot.com/2011/05/extending-jruby.html")))

                  ) ;; slide
           (slide :title (h2 "JRuby Issue#825")
                  (bullet (h3 :class "yellow" "Create a sample project and wiki pages on how to write JRuby extensions"))
                  (bullet (h4 (a :target "_blank" :href "http://github.com/jruby/jruby/issues/825" "http://github.com/jruby/jruby/issues/825")))
                  ) ;; slide

           )
  )

(defn chapter-conclusion []
  (chapter :title "Conclusion"
           (slide :title (h2 "Java EMPIRE May Strike Back")
                  (br)
                  (bullet :class "fragment" :data-fragment-index "1"
                          (h3 :class "yellow" "Let Java Go"))
                  (bullet :class "fragment" :data-fragment-index "2"
                          (h3 :class "yellow" "JRuby is an Open Door"))
                  ) ;; slide

           (slide :title (h2 "It's Java, But Wait, It's Ruby")
                  (br)
                  (bullet :class "fragment" :data-fragment-index "1"
                          (h3 :class "yellow" "Start writing Java Extension"))
                  (bullet :class "fragment" :data-fragment-index "2"
                          (h3 :class "yellow" "Implement Ruby methods in Java"))
                  (bullet :class "fragment" :data-fragment-index "3"
                          (h3 :class "yellow" "Java technologies are for Ruby"))
                  ) ;; slide

           (slide :title (h2 "Thank You!"))
           
           ) ;; chapter
  ) ;; defn

(html :ng-app "hoplonApp"
        (head
         (title "RubyNation 2014"))
        (body
         (slideshow :theme "night"
                    (chapter-intro)
                    (chapter-mapleroad)
                    (chapter-nokogiri)
                    (chapter-diametric)
                    (chapter-poplar)
                    (chapter-conclusion))))
